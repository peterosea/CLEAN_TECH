{"version":3,"sources":["grid.js","AppStyle.js","PostCode.js","PrivacyPolicy/index.js","App.js","index.js"],"names":["Grid","breakpoints","xxl","xl","lg","md","sm","xs","row","padding","col","container","maxWidth","RPN","styled","Container","Col","Input","input","AddressBase","Postcode","Address","Btn","Button","Label","label","ErrorMessage","span","PPC","div","BtnWrap","StyledModal","Modal","SuccessModal","FailModal","props","onComplete","data","fullAddress","address","extraAddress","addressType","bname","buildingName","completeAfter","zonecode","PrivacyPolicy","className","FormControlLabel","control","Checkbox","required","App","useForm","handleSubmit","register","errors","useState","undefined","addressModalOpen","etcValue","values","setValues","success","setSuccess","fail","setFail","toggleModal","gridTheme","onSubmit","_values","result","Object","assign","Form","FormData","location","keys","map","key","set","a","document","querySelector","remove","cForm","createElement","setAttribute","appendChild","body","submit","e","message","as","FormControl","RadioGroup","defaultValue","value","Radio","name","ref","placeholder","readOnly","onClick","variant","isOpen","onBackgroundClick","res","pattern","TextareaAutosize","rowsMin","onChange","target","hidden","style","borderBottom","type","process","GlobalCss","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.38e41107.chunk.js","sourcesContent":["export const breakpoints = {\n  xxl: 1441,\n  xl: 1201,\n  lg: 993,\n  md: 769,\n  sm: 577,\n  xs: 576,\n  // or you can use aliases\n  // veryGiant: 1440,\n  // giant: 1200,\n  // desktop: 992,\n  // tablet: 768,\n  // phone: 576,\n  // smaller: 575,\n};\n\nconst Grid = {\n  breakpoints,\n  row: {\n    padding: 15, // default 15\n  },\n  col: {\n    padding: 15, // default 15\n  },\n  container: {\n    padding: 15, // default 15\n    maxWidth: {\n      // defaults below\n      xxl: 1141,\n      xl: 1140,\n      lg: 960,\n      md: 720,\n      sm: 540,\n      xs: 540,\n      // or you can use aliases\n      // veryGiant: 1141,\n      // giant: 1140,\n      // desktop: 960,\n      // tablet: 720,\n      // phone: 540,\n      // smaller: 540,\n    },\n  },\n};\n\nexport default Grid;\n","import styled from 'styled-components';\nimport { Container, Col } from 'styled-bootstrap-grid';\nimport { Button } from '@material-ui/core';\nimport Modal from 'styled-react-modal';\n\nexport const RPN = styled(Container)`\n  padding-top: 30px;\n  border-top: 1px solid #333;\n  margin-top: 25px;\n  .required {\n    color: #009b94;\n  }\n  .validateFailed {\n    border-color: red;\n  }\n  ${Col} {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    border-bottom: 1px solid #d9dee5;\n  }\n  .MuiRadio-colorSecondary.Mui-checked,\n  .MuiCheckbox-colorSecondary.Mui-checked {\n    color: #009b94;\n  }\n  .etcField {\n    border: 1px solid #d9dee5;\n    padding: 20px;\n    font-size: 18px;\n    line-height: 1.56;\n    letter-spacing: -0.9px;\n    text-align: left;\n    color: #333;\n    border-radius: 4px;\n  }\n`;\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n  padding: 4px;\n  border: 1px solid #d9dee5;\n  padding: 20px;\n  border-radius: 4px;\n  width: 100%;\n  &::placeholder {\n    color: #cac1c8;\n  }\n`;\n\nconst AddressBase = styled(Input)`\n  cursor: default;\n`;\nInput.Postcode = styled(AddressBase)`\n  width: 120px;\n  margin-right: 8px;\n`;\nInput.Address = styled(AddressBase)`\n  margin-right: 8px;\n  width: auto;\n`;\n\nconst Btn = styled(Button)`\n  border: none;\n  box-shadow: none !important;\n  line-height: 1 !important;\n  padding: 20px !important;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  .name {\n    margin-bottom: 15px;\n    display: inline-flex;\n    align-items: center;\n    line-height: 1;\n    cursor: pointer;\n    span:last-child {\n      font-family: NotoSansKR;\n      font-size: 18px;\n      font-weight: bold;\n      letter-spacing: -0.9px;\n      text-align: left;\n    }\n  }\n  .name span:not(:last-child) {\n    margin-right: 4px;\n  }\n`;\n\nexport const ErrorMessage = styled.span`\n  display: inline-block;\n  color: red;\n  padding: 8px 0;\n`;\n\nexport const PPC = styled.div`\n  .tableWrap {\n    max-height: 280px;\n    overflow-y: scroll;\n    border: 1px solid #d9dee5;\n    padding: 20px;\n    font-size: 18px;\n    line-height: 1.56;\n    letter-spacing: -0.9px;\n    text-align: left;\n    color: #333;\n    border-radius: 4px;\n    background-color: #fff;\n  }\n  table.main {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 0 auto;\n    border-spacing: 2px;\n  }\n  .small {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const BtnWrap = styled.div`\n  padding-top: 30px;\n  padding-bottom: 30px;\n  display: flex;\n  justify-content: center;\n  ${Btn} {\n    padding: 27px 27px 29px;\n    width: 100%;\n    max-width: 300px;\n    text-align: center;\n    font-family: NotoSansKR;\n    font-size: 24px;\n    font-weight: bold;\n    line-height: 1.2;\n    letter-spacing: -1.2px;\n    text-align: center;\n    color: #fff;\n    background-color: #009b94;\n    border-radius: 0;\n  }\n`;\n\nexport { Input, Btn, Label };\n\nexport const StyledModal = Modal.styled`\n  max-width: 320px;\n  width: 100%;\n`;\nexport const SuccessModal = Modal.styled`\n  max-width: 700px;\n  width: 100%;\n  background-color: #fff;\n  color: #333333;\n  text-align: center;\n  padding-top: 60px;\n  h1 {\n    font-family: NotoSansKR;\n    font-size: 52px;\n    font-weight: bold;\n    letter-spacing: -2.6px;\n    margin-bottom: 54px;\n    margin-top: 0;\n  }\n  p {\n    font-family: NotoSansKR;\n    font-size: 24px;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: -1.2px;\n    margin-bottom: 54px;\n  }\n  button {\n    cursor: pointer;\n    outline: none;\n    box-shadow: none;\n    border: none;\n    width: 100%;\n    padding: 25px 0;\n    background-color: #009b94;\n    font-family: NotoSansKR;\n    font-size: 24px;\n    font-weight: bold;\n    letter-spacing: -1.2px;\n    color: #fff;\n  }\n`;\nexport const FailModal = Modal.styled`\n  max-width: 700px;\n  width: 100%;\n  background-color: #fff;\n  color: #333333;\n  text-align: center;\n  padding-top: 60px;\n  h1 {\n    font-family: NotoSansKR;\n    font-size: 52px;\n    font-weight: bold;\n    letter-spacing: -2.6px;\n    margin-bottom: 54px;\n    margin-top: 0;\n  }\n  p {\n    font-family: NotoSansKR;\n    font-size: 24px;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: -1.2px;\n    margin-bottom: 54px;\n  }\n  button {\n    cursor: pointer;\n    outline: none;\n    box-shadow: none;\n    border: none;\n    width: 100%;\n    padding: 25px 0;\n    background-color: #009b94;\n    font-family: NotoSansKR;\n    font-size: 24px;\n    font-weight: bold;\n    letter-spacing: -1.2px;\n    color: #fff;\n  }\n`;\n","import DaumPostcode from 'react-daum-postcode';\n\nconst Postcode = (props) => {\n  const handleComplete = (data) => {\n    let fullAddress = data.address;\n    let extraAddress = '';\n\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n      if (data.buildingName !== '') {\n        extraAddress +=\n          extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n    }\n\n    props.completeAfter({ fullAddress, zonecode: data.zonecode });\n  };\n\n  return <DaumPostcode onComplete={handleComplete} />;\n};\n\nexport default Postcode;\n","import { Checkbox, FormControlLabel } from '@material-ui/core';\nimport { FaStar } from 'react-icons/fa';\n// components\nimport { PPC, Label } from '../AppStyle';\n\nconst PrivacyPolicy = () => {\n  return (\n    <section>\n      <PPC>\n        <Label>\n          <div className=\"nameWrap\">\n            <div className=\"name\">\n              <span className=\"required\">\n                <FaStar />\n              </span>\n              <span>개인정보 활용 동의</span>\n            </div>\n          </div>\n        </Label>\n        <div className=\"tableWrap\">\n          주) 크린텍은 장비구입 신청 및 상담 등을 위해 아래와 같이 수집을 하고\n          있습니다\n          <br />\n          <br />\n          <strong>수집하는 개인정보의 항목</strong>\n          <br />\n          - 필수항목 : 회사 상호명, 현장명, 이름, 이메일, 지역, 장비명\n          <br />\n          - 선택항목 : 휴대폰 번호\n          <br />\n          개인정보의 수집 및 이용 목적\n          <br />\n          - 장비구입 신청 및 상담관련 제반 업무\n          <br />\n          - 당사 고객 만족도 조사, 전시회, 고객초청행사, 신규장비 안내 등과 같은\n          설문, DM용\n          <br />\n          <br />\n          개인정보 보유 및 이용 기간\n          <br />\n          <br />\n          - 본인이 동의를 철회할 때까지 유효\n          <br />\n          <br />\n          - 고객의 동의 철회 요청시 해당 개인정보는 지체 없이 파기 (동의 철회\n          요청 1544-3050)\n          <br />\n          <br />\n          동의 거부권 및 미동의에 대한 불이익 안내\n          <br />\n          <br />\n          - 고객님께서는 개인정보 수집 및 이용에 동의하지 않으실 수 있습니다.\n          <br />\n          <br />\n          - 단 필수정보 미입력시 장비구입 신청 및 상담에 제약이 있을 수\n          있습니다.\n          <br />\n          <br />\n          위와 같이 개인정보를 수집∙이용하는데 동의하십니까?\n        </div>\n        <FormControlLabel\n          control={<Checkbox required />}\n          label=\"개인정보 활용에 동의합니다.\"\n        />\n      </PPC>\n    </section>\n  );\n};\n\nexport default PrivacyPolicy;\n","import { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form/dist/index.ie11';\nimport { GridThemeProvider, Row, Col } from 'styled-bootstrap-grid';\nimport { FaStar } from 'react-icons/fa';\nimport {\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  FormControl,\n  TextareaAutosize,\n} from '@material-ui/core';\n// components\nimport Grid from './grid';\nimport {\n  RPN,\n  Input,\n  ErrorMessage,\n  Label,\n  Btn,\n  BtnWrap,\n  StyledModal,\n  SuccessModal,\n  FailModal,\n} from './AppStyle';\nimport Postcode from './PostCode';\nimport PrivacyPolicy from './PrivacyPolicy';\n\nfunction App() {\n  const { handleSubmit, register, errors, control } = useForm();\n  const [values, setValues] = useState({\n    data: undefined,\n    addressModalOpen: false,\n    address: false,\n    etcValue: '',\n  });\n  const [success, setSuccess] = useState(false);\n  const [fail, setFail] = useState(false);\n\n  function toggleModal() {\n    setValues({ ...values, addressModalOpen: !values.addressModalOpen });\n  }\n\n  function completePostCode(res) {\n    const { fullAddress, zonecode } = res;\n    setValues({\n      ...values,\n      addressModalOpen: !values.addressModalOpen,\n      address: { fullAddress, zonecode },\n    });\n  }\n\n  const onSubmit = (_values) => {\n    const result = Object.assign({}, _values);\n    setValues({ ...values, data: result });\n    const Form = new FormData();\n    result['orgid'] = '00D90000000kgNF';\n    result['00N9000000Do9g4'] = 1;\n    result['submit'] = '제출';\n    result['retURL'] = 'http://cleantech2021.cafe24.com/as-application/';\n    if (process.env.NODE_ENV !== 'production') {\n      result['debug'] = 1;\n      result['debugEmail'] = 'test@hyeon.pro';\n    }\n    delete result.location;\n    Object.keys(result).map((key) => Form.set(key, result[key]));\n    (async () => {\n      try {\n        if (document.querySelector('#dynamicForm')) {\n          document.querySelector('#dynamicForm').remove();\n        }\n        const cForm = document.createElement('form');\n        cForm.setAttribute('charset', 'UTF-8');\n        cForm.setAttribute('method', 'Post'); //Post 방식\n        cForm.setAttribute('style', 'display: none !important'); //Post 방식\n        cForm.setAttribute('id', 'dynamicForm');\n        cForm.setAttribute(\n          'action',\n          'https://webto.salesforce.com/servlet/servlet.WebToCase?encoding=UTF-8',\n        );\n        Object.keys(result).map((key) => {\n          const input = document.createElement('input');\n          input.setAttribute('value', result[key]);\n          if (key === 'submit') {\n            input.setAttribute('type', key);\n          } else {\n            input.setAttribute('name', key);\n          }\n          cForm.appendChild(input);\n          return '';\n        });\n        document.body.appendChild(cForm);\n        cForm.submit();\n\n        setSuccess(true);\n      } catch (e) {\n        setFail(e.message);\n      }\n    })();\n  };\n\n  return (\n    <GridThemeProvider gridTheme={Grid}>\n      <>\n        <form className=\"policyForm\" onSubmit={handleSubmit(onSubmit)}>\n          <RPN>\n            <Row>\n              <Col col>\n                <Label>\n                  <div className=\"nameWrap\">\n                    <div className=\"name\">\n                      <span className=\"required\">\n                        <FaStar />\n                      </span>\n                      <span>접수 처리 유형</span>\n                    </div>\n                  </div>\n                </Label>\n                <Controller\n                  as={\n                    <FormControl>\n                      <RadioGroup defaultValue=\"지원실 자체접수\">\n                        <div className=\"deliveryList\">\n                          <FormControlLabel\n                            value=\"지원실 자체접수\"\n                            control={<Radio />}\n                            label=\"지원실 자체접수\"\n                          />\n                          <FormControlLabel\n                            value=\"창고출고\"\n                            control={<Radio />}\n                            label=\"창고출고\"\n                          />\n                          <FormControlLabel\n                            value=\"반품처리\"\n                            control={<Radio />}\n                            label=\"반품처리\"\n                          />\n                          <FormControlLabel\n                            value=\"AM 활동\"\n                            control={<Radio />}\n                            label=\"AM 활동\"\n                          />\n                        </div>\n                      </RadioGroup>\n                    </FormControl>\n                  }\n                  name=\"00N9000000EK7XL\"\n                  defaultValue=\"접수 처리 유형\"\n                  control={control}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col col={12} sm={6}>\n                <Label>\n                  <div className=\"nameWrap\">\n                    <div className=\"name\">\n                      <span>상호 (계산서 승인처)</span>\n                    </div>\n                  </div>\n                  <Input\n                    name=\"company\"\n                    ref={register()}\n                    placeholder=\"상호명을 입력하세요.\"\n                    className={errors['company'] && 'validateFailed'}\n                  />\n                </Label>\n              </Col>\n              <Col col={12} sm={6}>\n                <Label>\n                  <div className=\"nameWrap\">\n                    <div className=\"name\">\n                      <span>현장명</span>\n                    </div>\n                  </div>\n                  <Input\n                    name=\"00N9000000Do9fV\"\n                    ref={register()}\n                    placeholder=\"이름을 입력하세요\"\n                    className={errors['00N9000000Do9fV'] && 'validateFailed'}\n                  />\n                </Label>\n              </Col>\n            </Row>\n            <Row>\n              <Col col={12} xl={6}>\n                <Label>\n                  <div className=\"nameWrap\">\n                    <div className=\"name\">\n                      <span>성명</span>\n                    </div>\n                  </div>\n                  <Input\n                    name=\"name\"\n                    ref={register()}\n                    placeholder=\"이름을 입력하세요\"\n                    className={errors['name'] && 'validateFailed'}\n                  />\n                </Label>\n              </Col>\n              <Col col={12} xl={6}>\n                <Label>\n                  <div className=\"nameWrap\">\n                    <div className=\"name\">\n                      <span className=\"required\">\n                        <FaStar />\n                      </span>\n                      <span>지역</span>\n                    </div>\n                  </div>\n                </Label>\n                <Input.Postcode\n                  name=\"우편번호\"\n                  placeholder=\"우편번호\"\n                  value={values.address.zonecode}\n                  className={errors['우편번호'] && 'validateFailed'}\n                  readOnly\n                />\n                <Input.Address\n                  name=\"location\"\n                  placeholder=\"주소\"\n                  ref={register({\n                    required: true,\n                  })}\n                  value={values.address.fullAddress}\n                  className={errors['location'] && 'validateFailed'}\n                  readOnly\n                />\n                <Btn onClick={toggleModal} variant=\"contained\">\n                  우편번호/주소 검색\n                </Btn>\n                <StyledModal\n                  isOpen={values.addressModalOpen}\n                  onBackgroundClick={toggleModal}\n                >\n                  <Postcode completeAfter={completePostCode} />\n                </StyledModal>\n              </Col>\n            </Row>\n            <Row>\n              <Col col={12} sm={6}>\n                <Label>\n                  <div className=\"nameWrap\">\n                    <div className=\"name\">\n                      <span className=\"required\">\n                        <FaStar />\n                      </span>\n                      <span>휴대폰</span>\n                    </div>\n                  </div>\n                  <Input\n                    name=\"phone\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^\\d{3}\\d{3,4}\\d{4}$/,\n                        message: '잘못된 형식의 휴대폰 번호',\n                      },\n                    })}\n                    placeholder=\"010-1234-5678\"\n                    className={errors['phone'] && 'validateFailed'}\n                  />\n                </Label>\n                <ErrorMessage>\n                  {errors['phone'] && errors['phone'].message}\n                </ErrorMessage>\n              </Col>\n              <Col col={12} sm={6}>\n                <Label>\n                  <div className=\"nameWrap\">\n                    <div className=\"name\">\n                      <span className=\"required\">\n                        <FaStar />\n                      </span>\n                      <span>이메일</span>\n                    </div>\n                  </div>\n                  <Input\n                    name=\"email\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: '잘못된 형식의 이메일 주소',\n                      },\n                    })}\n                    placeholder=\"user@email.com\"\n                    className={errors['email'] && 'validateFailed'}\n                  />\n                </Label>\n                <ErrorMessage>\n                  {errors['email'] && errors['email'].message}\n                </ErrorMessage>\n              </Col>\n            </Row>\n            <Row>\n              <Col col>\n                <Label>\n                  <div className=\"nameWrap\">\n                    <div className=\"name\">\n                      <span>요청 사항</span>\n                    </div>\n                  </div>\n                  <TextareaAutosize\n                    label=\"기타\"\n                    className=\"etcField\"\n                    rowsMin={8}\n                    onChange={(e) =>\n                      setValues({ ...values, etcValue: e.target.value })\n                    }\n                    placeholder=\"요청사항을 입력하세요.\"\n                  />\n                  <input\n                    name=\"description\"\n                    ref={register()}\n                    value={values.etcValue}\n                    readOnly\n                    hidden\n                  />\n                </Label>\n              </Col>\n            </Row>\n            <Row>\n              <Col style={{ borderBottom: '0' }} col>\n                <PrivacyPolicy />\n              </Col>\n            </Row>\n            <BtnWrap>\n              <Btn type=\"submit\" variant=\"contained\">\n                문의 등록하기\n              </Btn>\n            </BtnWrap>\n          </RPN>\n\n          <SuccessModal\n            isOpen={success}\n            onBackgroundClick={() => setSuccess(false)}\n          >\n            <h1>등록이 완료되었습니다.</h1>\n            <p>최대 1시간 이내에 응답하겠습니다. 감사합니다.</p>\n            <button type=\"button\" onClick={() => setSuccess(false)}>\n              확인\n            </button>\n          </SuccessModal>\n          <FailModal\n            isOpen={typeof fail !== 'boolean'}\n            onBackgroundClick={() => setFail(false)}\n          >\n            <h1>등록이 실패하였습니다.</h1>\n            <p>{fail}</p>\n            <button type=\"button\" onClick={() => setFail(false)}>\n              확인\n            </button>\n          </FailModal>\n\n          {process.env.NODE_ENV !== 'production' && (\n            <>\n              <div>\n                <h2>Return Data</h2>\n                {values.data && (\n                  <pre>{JSON.stringify(values.data, null, 2)}</pre>\n                )}\n              </div>\n            </>\n          )}\n        </form>\n      </>\n    </GridThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createGlobalStyle } from 'styled-components';\nimport { ModalProvider } from 'styled-react-modal';\n\nconst GlobalCss = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <ModalProvider>\n      <GlobalCss />\n      <App />\n    </ModalProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}